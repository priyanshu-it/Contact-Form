/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-10-27 07:17:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.project.model.TableData;

public final class adminDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("com.project.model.TableData");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Admin Dashboard</title>\r\n");
      out.write("     <link rel=\"icon\" href=\"https://cdn-icons-png.flaticon.com/512/7069/7069924.png\">\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("        margin: 10px;\r\n");
      out.write("        background-color: #eef2f7;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h2 {\r\n");
      out.write("      padding-left: 20px;\r\n");
      out.write("        color: #2c3e50;\r\n");
      out.write("        margin-bottom: 25px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    table {\r\n");
      out.write("        border-collapse: collapse;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        background-color: #ffffff;\r\n");
      out.write("        border-radius: 3px;\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("     th, td {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border: 1.5px solid #34495e;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    th {\r\n");
      out.write("        background-color: #34495e;\r\n");
      out.write("        color: #fff;\r\n");
      out.write("        font-weight: 600;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:hover {\r\n");
      out.write("        background-color: #f9f9f9;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:nth-child(even) {\r\n");
      out.write("        background-color: #f4f6f8;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .linkbtn {\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        top: 15px;\r\n");
      out.write("        right: 20px;\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        background-color: #2980b9;\r\n");
      out.write("        color: white;\r\n");
      out.write("        padding: 10px 15px;\r\n");
      out.write("        border-radius: 5px;\r\n");
      out.write("        font-size: 14px;\r\n");
      out.write("        transition: background-color 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .linkbtn:hover {\r\n");
      out.write("        background-color: #1c5980;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"submit\"] {\r\n");
      out.write("        background-color: #e74c3c;\r\n");
      out.write("        color: white;\r\n");
      out.write("        border: none;\r\n");
      out.write("        padding: 6px 12px;\r\n");
      out.write("        border-radius: 4px;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("        font-size: 13px;\r\n");
      out.write("        transition: background-color 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"submit\"]:hover {\r\n");
      out.write("        background-color: #c0392b;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @media (max-width: 768px) {\r\n");
      out.write("        table, thead, tbody, th, td, tr {\r\n");
      out.write("            display: block;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        table {\r\n");
      out.write("            box-shadow: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        th {\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        tr {\r\n");
      out.write("            background: white;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        td {\r\n");
      out.write("            padding: 10px 15px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            position: relative;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        td::before {\r\n");
      out.write("            content: attr(data-label);\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            left: 15px;\r\n");
      out.write("            top: 10px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: #555;\r\n");
      out.write("            width: 40%;\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"linkbtn\" onclick=\"window.location.href='adminLogin.jsp';\"><b>LOG-OUT</b></div>\r\n");
      out.write("\r\n");
      out.write("    <h2>Admin Dashboard - Data List</h2>\r\n");
      out.write("<table>\r\n");
      out.write("    <thead>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>Id</th>\r\n");
      out.write("        <th>Name</th>\r\n");
      out.write("        <th>Email</th>\r\n");
      out.write("        <th>Text</th>\r\n");
      out.write("        <th>Time/Date</th>\r\n");
      out.write("        <th>Action</th>\r\n");
      out.write("    </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("    <tbody>\r\n");
      out.write("    ");

        List<TableData> tableData = (List<TableData>) request.getAttribute("tableData");
        if (tableData != null) {
            for (TableData data : tableData) {
    
      out.write("\r\n");
      out.write("        <tr>\r\n");
      out.write("            <td data-label=\"Id\">");
      out.print( data.getId() );
      out.write("</td>\r\n");
      out.write("            <td data-label=\"Name\">");
      out.print( data.getName() );
      out.write("</td>\r\n");
      out.write("            <td data-label=\"Email\"><a href=\"mailto:");
      out.print( data.getEmail() );
      out.write("?subject=My Mail!\">");
      out.print( data.getEmail() );
      out.write("</a></td>\r\n");
      out.write("            <td data-label=\"Text\">");
      out.print( data.getText() );
      out.write("</td>\r\n");
      out.write("            <td data-label=\"Time/Date\">");
      out.print( data.getTimeDate() );
      out.write("</td>\r\n");
      out.write("            <td data-label=\"Action\">\r\n");
      out.write("                <form action=\"success.jsp\" method=\"POST\" onsubmit=\"return confirm('Are you sure you want to delete this entry?');\">\r\n");
      out.write("                    <input type=\"hidden\" name=\"id\" value=\"");
      out.print( data.getId() );
      out.write("\">\r\n");
      out.write("                    <input type=\"submit\" value=\"Delete\" style=\"background-color: red; color: white; border: none; padding: 5px 10px; border-radius: 3px;\">\r\n");
      out.write("                </form>\r\n");
      out.write("            </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("    ");

            }
        } else {
    
      out.write("\r\n");
      out.write("        <tr><td colspan=\"6\" style=\"text-align:center;\">No data available.</td></tr>\r\n");
      out.write("    ");

        }
    
      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
